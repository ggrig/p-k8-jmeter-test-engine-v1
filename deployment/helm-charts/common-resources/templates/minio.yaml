apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  labels:
    app: minio
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: minio
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: minio
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.minio.image.repository }}:{{ .Values.minio.image.tag }}"
          imagePullPolicy: {{ .Values.minio.image.pullPolicy }}
          args:
            - server
            - /data
          env:
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key : "MINIO_ACCESS_KEY"
                  name: "minio-creds"
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key : "MINIO_SECRET_KEY"
                  name: "minio-creds"
          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 15
            periodSeconds: 20
          volumeMounts:
            - name: minio-storage
              mountPath: /data
          resources:
            {{- toYaml .Values.minio.resources | nindent 12 }}
      volumes:
        - name: minio-storage
          persistentVolumeClaim:
            claimName: efs-claim
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}